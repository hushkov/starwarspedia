{"version":3,"sources":["components/Navbar.jsx","components/Person.jsx","components/People.jsx","components/Planet.jsx","components/Planets.jsx","App.js","index.js"],"names":["Navbar","setPage","onClick","Person","person","className","name","gender","birth_year","fetchPeople","a","page","fetch","res","json","People","useState","useQuery","keepPreviousData","isLoading","isError","data","isFetching","isPreviousData","old","Math","max","disabled","next","results","map","Planet","planet","population","terrain","fetchPlanets","Planets","queryClient","QueryClient","App","QueryClientProvider","client","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.148eac17.chunk.js","sourcesContent":["const Navbar = ({ setPage }) => {\r\n  return (\r\n    <nav>\r\n      <button onClick={() => setPage(\"planets\")}>Planets</button>\r\n      <button onClick={() => setPage(\"people\")}>People</button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const Person = ({ person }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>{person.name}</h3>\r\n      <p>Gender - {person.gender}</p>\r\n      <p>Birth year - {person.birth_year}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport Person from \"./Person\";\r\n\r\nconst fetchPeople = async (page = 1) => {\r\n  const res = await fetch(`https://swapi.dev/api/people/?page=${page}`);\r\n  return res.json();\r\n};\r\n\r\nconst People = () => {\r\n  const [page, setPage] = useState(1);\r\n  const {\r\n    isLoading,\r\n    isError,\r\n\r\n    data,\r\n    isFetching,\r\n    isPreviousData,\r\n  } = useQuery([\"people\", page], () => fetchPeople(page), {\r\n    keepPreviousData: true,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>People</h1>\r\n      <button\r\n        onClick={() => setPage((old) => Math.max(old - 1, 1))}\r\n        disabled={page === 1}\r\n      >\r\n        Prev Page\r\n      </button>\r\n      <span>{page}</span>\r\n      <button\r\n        onClick={() => setPage((old) => (data?.next ? old + 1 : old))}\r\n        disabled={isPreviousData || !data?.next}\r\n      >\r\n        Next page\r\n      </button>\r\n      {(isLoading || isFetching) && <div>Loading ...</div>}\r\n      {isError && <div>Error fetching data</div>}\r\n      {data && (\r\n        <div>\r\n          {data.results.map((person) => (\r\n            <Person key={person.name} person={person} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","const Planet = ({ planet }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>{planet.name}</h3>\r\n      <p>Population - {planet.population}</p>\r\n      <p>Terrain - {planet.terrain}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planet;\r\n","import { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport Planet from \"./Planet\";\r\n\r\nconst fetchPlanets = async (page = 1) => {\r\n  const res = await fetch(`https://swapi.dev/api/planets/?page=${page}`);\r\n  return res.json();\r\n};\r\n\r\nconst Planets = () => {\r\n  const [page, setPage] = useState(1);\r\n  const {\r\n    isLoading,\r\n    isError,\r\n\r\n    data,\r\n    isFetching,\r\n    isPreviousData,\r\n  } = useQuery([\"planets\", page], () => fetchPlanets(page), {\r\n    keepPreviousData: true,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Planets</h1>\r\n      <button\r\n        onClick={() => setPage((old) => Math.max(old - 1, 1))}\r\n        disabled={page === 1}\r\n      >\r\n        Prev Page\r\n      </button>\r\n      <span>{page}</span>\r\n      <button\r\n        onClick={() => setPage((old) => (data?.next ? old + 1 : old))}\r\n        disabled={isPreviousData || !data?.next}\r\n      >\r\n        Next page\r\n      </button>\r\n      {(isLoading || isFetching) && <div>Loading ...</div>}\r\n      {isError && <div>Error fetching data</div>}\r\n      {data && (\r\n        <div>\r\n          {data.results.map((planet) => (\r\n            <Planet key={planet.name} planet={planet} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planets;\r\n","import React, { useState } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport Navbar from \"./components/Navbar\";\nimport People from \"./components/People\";\nimport Planets from \"./components/Planets\";\n\n// Create a client\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [page, setPage] = useState(\"planets\");\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        <h1>StarWarsPedia</h1>\n        <Navbar setPage={setPage} />\n        <div className=\"content\">\n          {page === \"planets\" ? <Planets /> : <People />}\n        </div>\n      </div>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}